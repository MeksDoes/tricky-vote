stages:
  - install
  - build
  - test
  - sonar

# Setup node
default:
  image: node:22
  before_script:
    - npm config set progress=false
    - npm config set depth=0
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - node_modules/
  interruptible: true
  retry: 1

# Install Dependencies for poll-service
install:poll-service:
  stage: install
  script:
    - cd poll-service
    - npm ci
  artifacts:
    paths:
      - poll-service/node_modules/

# Install Dependencies for fe-service
install:fe-service:
  stage: install
  script:
    - cd fe-service
    - npm ci
  artifacts:
    paths:
      - fe-service/node_modules/

generate:fe-service-env:
  stage: install
  script:
    - |
      cat <<EOF > fe-service/.env
      VITE_API_ENDPOINT=${VITE_API_ENDPOINT}
      EOF
  artifacts:
    paths:
      - fe-service/.env
    expire_in: 1 hour

generate:poll-service-env:
  stage: install
  script:
    - |
      cat <<EOF > poll-service/.env
      MONGODB_USERNAME=${MONGODB_USERNAME}
      MONGODB_PASSWORD=${MONGODB_PASSWORD}
      MONGODB_ENVIROMENT=${MONGODB_ENVIROMENT}
      MONGODB_PORT=${MONGODB_PORT}
      MONGODB_DATABASE=${MONGODB_DATABASE}
      FE_SERVICE_WHITELIST_URL=${FE_SERVICE_WHITELIST_URL}
      PORT=${PORT-3000}
      EOF
  artifacts:
    paths:
      - poll-service/.env
    expire_in: 1 hour

# Build poll-service
build:poll-service:
  stage: build
  needs: ["install:poll-service", "generate:poll-service-env"]
  script:
    - cd poll-service
    - npm run build
  artifacts:
    paths:
      - poll-service/dist/

# Build fe-service
build:fe-service:
  stage: build
  needs: ["install:fe-service", "generate:fe-service-env"]
  script:
    - cd fe-service
    - npm run build
  artifacts:
    paths:
      - fe-service/dist/

# Test poll-service
test:poll-service:
  stage: test
  needs: ["install:poll-service", "build:poll-service"]
  script:
    - cd poll-service
    - npm run test:cov
  artifacts:
    paths:
      - poll-service/coverage/lcov.info

# Test fe-service
test:fe-service:
  stage: test
  needs: ["install:fe-service", "build:fe-service"]
  script:
    - cd fe-service
    - npm run test:cov
  artifacts:
    paths:
      - fe-service/coverage/lcov.info

# Sonar cloud
variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

sonarcloud-check-fe:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  needs:
    - test:fe-service
  script:
    - sonar-scanner -Dproject.settings=sonar-project.fe-service.properties
  variables:
    SONAR_TOKEN: $SONAR_TOKEN_FE
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache

sonarcloud-check-be:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  needs:
    - test:poll-service
  script:
    - sonar-scanner -Dproject.settings=sonar-project.poll-service.properties
  variables:
    SONAR_TOKEN: $SONAR_TOKEN_BE
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE
      when: always
